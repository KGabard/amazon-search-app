'use client'

import { theme } from '@/styles/theme'
import Header from './components/header/Header'
import './globals.css'
import { ThemeProvider } from '@mui/material/styles'
import { montserrat, raleway, share } from '@/styles/fonts'
import {
  ApolloClient,
  InMemoryCache,
  ApolloProvider,
  gql,
  createHttpLink,
  defaultDataIdFromObject,
} from '@apollo/client'
import { setContext } from '@apollo/client/link/context'
import ProductsListContextProvider from '@/context/ProductsListContextProvider'

export const metadata = {
  title: 'Amazon search',
  description: 'Generated by create next app',
}

const httpLink = createHttpLink({
  uri: 'https://graphql.canopyapi.co/',
})

//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! cache data ??
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! useLazyQuery ??

const authLink = setContext((_, { headers }) => {
  // get the authentication token (only in production env)
  const token =
    process.env.NODE_ENV === 'production'
      ? process.env.NEXT_PUBLIC_CANOPY_API_TOKEN
      : ''

  // return the headers to the context so httpLink can read them
  return {
    headers: {
      ...headers,
      authorization: token ? `Bearer ${token}` : '',
    },
  }
})

type AmazonProductSearchInput = {
  searchTerm: string
  domain: string
}

type ProductResultsInput = {
  page: string
  sort: string
}

const client = new ApolloClient({
  link: authLink.concat(httpLink),
  cache: new InMemoryCache(),
  connectToDevTools: true,
})

export default function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {
  return (
    <ThemeProvider theme={theme}>
      <ApolloProvider client={client}>
        <ProductsListContextProvider>
          <html lang="en">
            <body
              className={`${montserrat.variable} ${share.variable} ${raleway.variable}`}
              style={{
                backgroundColor: theme.palette.neutral.secondary,
                color: theme.palette.white.main,
              }}
            >
              <Header />
              {children}
            </body>
          </html>
        </ProductsListContextProvider>
      </ApolloProvider>
    </ThemeProvider>
  )
}
